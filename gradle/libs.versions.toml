[versions]
# Plugins
kotlin                          = "1.8.20"                  # https://kotlinlang.org/
gitonium                        = "1.2.0"                   # https://github.com/metaborg/gitonium
metaborg-gradle-config          = "0.6.0"                   # https://github.com/metaborg/gradle.config
spoofax-gradle                  = "0.5.9"                   # https://github.com/metaborg/spoofax.gradle
devenv-spoofax-gradle           = "0.5.9"                   # https://github.com/metaborg/spoofax.gradle
# Spoofax 3
spoofax3                        = "0.0.0"                   # https://spoofax.dev/spoofax-pie/develop/ (https://github.com/metaborg/spoofax-pie)
spoofax3-resource               = "0.14.1"                  # https://github.com/metaborg/resource
spoofax3-common                 = "0.11.0"                  # https://github.com/metaborg/common/
spoofax3-log                    = "0.5.5"                   # https://github.com/metaborg/log/
spoofax3-pie                    = "0.21.0"                  # https://github.com/metaborg/pie/
spoofax2                        = "2.6.0-SNAPSHOT"          # https://spoofax.dev/ (https://github.com/metaborg/spoofax-releng)
# Collections
capsule                         = "0.6.3"                   # https://usethesource.io/projects/capsule/ (https://github.com/usethesource/capsule)
# Dependency Injection
guice                           = "5.1.0"                   # https://github.com/google/guice
dagger                          = "2.25.2"                  # https://github.com/google/dagger
# Annotations & Annotation Processors
immutables                      = "2.10.1"                  # https://immutables.github.io/ (https://github.com/immutables/immutables)
derive4j                        = "1.1.1"                   # https://github.com/derive4j/derive4j
jakarta-annotation              = "2.1.1"                   # https://github.com/jakartaee/common-annotations-api
jakarta-inject                  = "2.0.1"                   # https://github.com/jakartaee/inject
javax-inject                    = "1"                       # https://github.com/javaee/javax.annotation
checkerframework                = "3.16.0"                  # https://checkerframework.org/ (https://github.com/typetools/checker-framework/)
# Maven
maven-resolver                  = "1.3.3"                   # https://maven.apache.org/resolver/index.html (https://github.com/apache/maven-resolver)
maven                           = "3.6.0"                   # https://maven.apache.org/ (https://github.com/apache/maven)
bnd                             = "5.3.0"                   # https://bnd.bndtools.org/ (https://github.com/bndtools/bnd)
# Logging
slf4j                           = "1.7.30"                  # https://www.slf4j.org/ (https://github.com/qos-ch/slf4j)
logback                         = "1.4.14"                  # https://logback.qos.ch/ (https://github.com/qos-ch/logback)
# Data Formats
jackson                         = "2.17.1"                  # https://github.com/FasterXML/jackson
commons-configuration2-jackson  = "1.3.5"                   # https://github.com/Virtlink/commons-configuration2-jackson/
# Utils
commons-math3                   = "3.6.1"                   # https://commons.apache.org/proper/commons-math/ (https://github.com/apache/commons-math)
commons-io                      = "2.15.1"                  # https://commons.apache.org/proper/commons-io/ (https://github.com/apache/commons-io)
commons-compress                = "1.18"                    # https://commons.apache.org/proper/commons-compress/ (https://github.com/apache/commons-compress)
commons-vfs2                    = "2.6.0"                   # https://commons.apache.org/proper/commons-vfs/ (https://github.com/apache/commons-vfs)
commons-lang3                   = "3.4"                     # https://commons.apache.org/proper/commons-lang/ (https://github.com/apache/commons-lang)
commons-configuration2          = "2.10.1"                  # https://commons.apache.org/proper/commons-configuration/ (https://github.com/apache/commons-configuration)
guava                           = "31.1-jre"                # https://github.com/google/guava
failureaccess                   = "1.0.1"                   # https://github.com/google/guava
rxjava                          = "3.0.2"                   # https://github.com/ReactiveX/RxJava?tab=readme-ov-file
# Testing
junit                           = "5.10.1"                  # https://junit.org/
junit4                          = "4.13.2"                  # https://junit.org/junit4/
kotest                          = "5.8.1"                   # https://kotest.io/
equalsverifier                  = "3.16.1"                  # https://jqno.nl/equalsverifier/ (https://github.com/jqno/equalsverifier)


[plugins]
kotlin-jvm                      = { id = "org.jetbrains.kotlin.jvm",                                        version.ref = "kotlin" }
gitonium                        = { id = "org.metaborg.gitonium",                                           version.ref = "gitonium" }
metaborg-gradle-rootproject         = { id = "org.metaborg.gradle.config.root-project",                     version.ref = "metaborg-gradle-config" }
metaborg-gradle-subproject          = { id = "org.metaborg.gradle.config.sub-project",                      version.ref = "metaborg-gradle-config" }
metaborg-gradle-java-library        = { id = "org.metaborg.gradle.config.java-library",                     version.ref = "metaborg-gradle-config" }
metaborg-gradle-java-application    = { id = "org.metaborg.gradle.config.java-application",                 version.ref = "metaborg-gradle-config" }
metaborg-gradle-java-gradleplugin   = { id = "org.metaborg.gradle.config.java-gradle-plugin",               version.ref = "metaborg-gradle-config" }
metaborg-gradle-kotlin-library      = { id = "org.metaborg.gradle.config.kotlin-library",                   version.ref = "metaborg-gradle-config" }
metaborg-gradle-kotlin-application  = { id = "org.metaborg.gradle.config.kotlin-application",               version.ref = "metaborg-gradle-config" }
metaborg-gradle-kotlin-testingonly  = { id = "org.metaborg.gradle.config.kotlin-testing-only",              version.ref = "metaborg-gradle-config" }
metaborg-gradle-kotlin-gradleplugin = { id = "org.metaborg.gradle.config.kotlin-gradle-plugin",             version.ref = "metaborg-gradle-config" }
metaborg-gradle-junit-testing       = { id = "org.metaborg.gradle.config.junit-testing",                    version.ref = "metaborg-gradle-config" }
spoofax-gradle-base             = { id = "org.metaborg.spoofax.gradle.base",                                version.ref = "spoofax-gradle" }
spoofax-gradle-langspec         = { id = "org.metaborg.spoofax.gradle.langspec",                            version.ref = "spoofax-gradle" }
spoofax-gradle-project          = { id = "org.metaborg.spoofax.gradle.project",                             version.ref = "spoofax-gradle" }
spoofax-gradle-test             = { id = "org.metaborg.spoofax.gradle.test",                                version.ref = "spoofax-gradle" }
devenv-spoofax-gradle-base      = { id = "org.metaborg.devenv.spoofax.gradle.base",                         version.ref = "devenv-spoofax-gradle" }
devenv-spoofax-gradle-langspec  = { id = "org.metaborg.devenv.spoofax.gradle.langspec",                     version.ref = "devenv-spoofax-gradle" }
devenv-spoofax-gradle-project   = { id = "org.metaborg.devenv.spoofax.gradle.project",                      version.ref = "devenv-spoofax-gradle" }
devenv-spoofax-gradle-test      = { id = "org.metaborg.devenv.spoofax.gradle.test",                         version.ref = "devenv-spoofax-gradle" }

[libraries]
# The below libraries ARE part of the Spoofax platform definition.
# NOTE: Also update: platform/build.gradle.kts

# Spoofax 3
spoofax3-bom                    = { module = "org.metaborg.spoofax3:platform",                              version.ref = "spoofax3" }
spoofax3-resource               = { module = "org.metaborg:resource",                                       version.ref = "spoofax3-resource" }
spoofax3-common                 = { module = "org.metaborg:common",                                         version.ref = "spoofax3-common" }
spoofax3-log-api                = { module = "org.metaborg:log.api",                                        version.ref = "spoofax3-log" }
spoofax3-log-backend-slf4j      = { module = "org.metaborg:log.backend.slf4j",                              version.ref = "spoofax3-log" }
spoofax3-pie-api                = { module = "org.metaborg:pie.api",                                        version.ref = "spoofax3-pie" }
spoofax3-pie-runtime            = { module = "org.metaborg:pie.runtime",                                    version.ref = "spoofax3-pie" }
spoofax3-pie-dagger             = { module = "org.metaborg:pie.dagger",                                     version.ref = "spoofax3-pie" }

# Spoofax 2
spoofax2-metaborg-util          = { module = "org.metaborg:org.metaborg.util",                              version.ref = "spoofax2" }
spoofax2-util-vfs2              = { module = "org.metaborg:util-vfs2",                                      version.ref = "spoofax2" }
spoofax2-terms                  = { module = "org.metaborg:org.spoofax.terms",                              version.ref = "spoofax2" }
spoofax2-interpreter-core       = { module = "org.metaborg:org.spoofax.interpreter.core",                   version.ref = "spoofax2" }
spoofax2-core                   = { module = "org.metaborg:org.metaborg.spoofax.core",                      version.ref = "spoofax2" }
spoofax2-meta-core              = { module = "org.metaborg:org.metaborg.spoofax.meta.core",                 version.ref = "spoofax2" }
spoofax2-spt-core               = { module = "org.metaborg:org.metaborg.spt.core",                          version.ref = "spoofax2" }
spoofax2-meta-lib-spoofax       = { module = "org.metaborg:meta.lib.spoofax",                               version.ref = "spoofax2" }
spoofax2-meta-lib-analysis      = { module = "org.metaborg:org.metaborg.meta.lib.analysis",                 version.ref = "spoofax2" }
spoofax2-strategoxt-strj        = { module = "org.metaborg:org.strategoxt.strj",                            version.ref = "spoofax2" }
spoofax2-jsglr-shared           = { module = "org.metaborg:jsglr.shared",                                   version.ref = "spoofax2" }
spoofax2-jsglr2                 = { module = "org.metaborg:org.spoofax.jsglr2",                             version.ref = "spoofax2" }
spoofax2-nabl2-terms            = { module = "org.metaborg:nabl2.terms",                                    version.ref = "spoofax2" }
spoofax2-nabl2-solver           = { module = "org.metaborg:nabl2.solver",                                   version.ref = "spoofax2" }
spoofax2-statix-solver          = { module = "org.metaborg:statix.solver",                                  version.ref = "spoofax2" }
spoofax2-sdf2table              = { module = "org.metaborg:sdf2table",                                      version.ref = "spoofax2" }
spoofax2-renaming-java          = { module = "org.metaborg:renaming.java",                                  version.ref = "spoofax2" }
spoofax2-interpreter-library-index  = { module = "org.metaborg:interpreter.library.index",                  version.ref = "spoofax2" }
spoofax2-flowspec-runtime       = { module = "org.metaborg:flowspec.runtime",                               version.ref = "spoofax2" }
spoofax2-runtime-task           = { module = "org.metaborg:org.metaborg.runtime.task",                      version.ref = "spoofax2" }

# Spoofax languages
spoofax-lang-esv                = { module = "org.metaborg:org.metaborg.meta.lang.esv",                     version.ref = "spoofax2" }
spoofax-lang-sdf3               = { module = "org.metaborg:org.metaborg.meta.lang.template",                version.ref = "spoofax2" }
spoofax-lang-spt                = { module = "org.metaborg:org.metaborg.meta.lang.spt",                     version.ref = "spoofax2" }
spoofax-lang-nabl               = { module = "org.metaborg:org.metaborg.meta.lang.nabl",                    version.ref = "spoofax2" }
spoofax-meta-nabl2-shared       = { module = "org.metaborg:org.metaborg.meta.nabl2.shared",                 version.ref = "spoofax2" }
spoofax-meta-nabl2-runtime      = { module = "org.metaborg:org.metaborg.meta.nabl2.runtime",                version.ref = "spoofax2" }
spoofax-lang-ts                 = { module = "org.metaborg:org.metaborg.meta.lang.ts",                      version.ref = "spoofax2" }
spoofax-lang-statix             = { module = "org.metaborg:statix.lang",                                    version.ref = "spoofax2" }
spoofax-meta-sdf3-ext-statix    = { module = "org.metaborg:sdf3.ext.statix",                                version.ref = "spoofax2" }
spoofax-meta-statix-runtime     = { module = "org.metaborg:statix.runtime",                                 version.ref = "spoofax2" }
spoofax-lang-stratego2          = { module = "org.metaborg:stratego.lang",                                  version.ref = "spoofax2" }

# ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- # ---- #
# The below libraries must NOT be part of the Spoofax platform definition.
# NOTE: Do NOT include these in platform/build.gradle.kts

# Collections
capsule                         = { module = "io.usethesource:capsule",                                     version.ref = "capsule" }

# Dependency Injection
guice                           = { module = "com.google.inject:guice",                                     version.ref = "guice" }
dagger                          = { module = "com.google.dagger:dagger",                                    version.ref = "dagger" }
dagger-compiler                 = { module = "com.google.dagger:dagger-compiler",                           version.ref = "dagger" }

# Annotations & Annotation Processing
immutables-value                = { module = "org.immutables:value",                                        version.ref = "immutables" }
immutables-serial               = { module = "org.immutables:serial",                                       version.ref = "immutables" }
derive4j                        = { module = "org.derive4j:derive4j",                                       version.ref = "derive4j" }
derive4j-annotation             = { module = "org.derive4j:derive4j-annotation",                            version.ref = "derive4j" }
jakarta-annotation              = { module = "jakarta.annotation:jakarta.annotation-api",                   version.ref = "jakarta-annotation" }
jakarta-inject                  = { module = "jakarta.inject:jakarta.inject-api",                           version.ref = "jakarta-inject" }
javax-inject                    = { module = "javax.inject:javax.inject",                                   version.ref = "javax-inject" }
checkerframework-android        = { module = "org.checkerframework:checker-qual-android",                   version.ref = "checkerframework" }

# Maven
maven-resolver-api              = { module = "org.apache.maven.resolver:maven-resolver-api",                version.ref = "maven-resolver" }
maven-resolver-impl             = { module = "org.apache.maven.resolver:maven-resolver-impl",               version.ref = "maven-resolver" }
maven-resolver-connector-basic  = { module = "org.apache.maven.resolver:maven-resolver-connector-basic",    version.ref = "maven-resolver" }
maven-resolver-transport-file   = { module = "org.apache.maven.resolver:maven-resolver-transport-file",     version.ref = "maven-resolver" }
maven-resolver-provider         = { module = "org.apache.maven:maven-resolver-provider",                    version.ref = "maven" }
bnd-gradle                      = { module = "biz.aQute.bnd:biz.aQute.bnd.gradle",                          version.ref = "bnd" }

# Logging
slf4j-simple                    = { module = "org.slf4j:slf4j-simple",                                      version.ref = "slf4j" }
slf4j-api                       = { module = "org.slf4j:slf4j-api",                                         version.ref = "slf4j" }
jcl-over-slf4j                  = { module = "org.slf4j:jcl-over-slf4j",                                    version.ref = "slf4j" }
logback-core                    = { module = "ch.qos.logback:logback-core",                                 version.ref = "logback" }
logback                         = { module = "ch.qos.logback:logback-classic",                              version.ref = "logback" }

# Data Formats
commons-configuration2-jackson  = { module = "com.virtlink.commons:commons-configuration2-jackson",         version.ref = "commons-configuration2-jackson" }
jackson-core                    = { module = "com.fasterxml.jackson.core:jackson-core",                     version.ref = "jackson" }
jackson-databind                = { module = "com.fasterxml.jackson.core:jackson-databind",                 version.ref = "jackson" }
jackson-annotations             = { module = "com.fasterxml.jackson.core:jackson-annotations",              version.ref = "jackson" }
jackson-dataformat-yaml         = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",    version.ref = "jackson" }

# Utils
commons-math3                   = { module = "org.apache.commons:commons-math3",                            version.ref = "commons-math3" }
commons-io                      = { module = "commons-io:commons-io",                                       version.ref = "commons-io" }
commons-compress                = { module = "org.apache.commons:commons-compress",                         version.ref = "commons-compress" }
commons-vfs2                    = { module = "org.apache.commons:commons-vfs2",                             version.ref = "commons-vfs2" }
commons-lang3                   = { module = "org.apache.commons:commons-lang3",                            version.ref = "commons-lang3" }
commons-configuration2          = { module = "org.apache.commons:commons-configuration2",                   version.ref = "commons-configuration2" }
guava                           = { module = "com.google.guava:guava",                                      version.ref = "guava" }
failureaccess                   = { module = "com.google.guava:failureaccess",                              version.ref = "failureaccess" }
rxjava                          = { module = "io.reactivex.rxjava3:rxjava",                                 version.ref = "rxjava" }

# Testing
junit                           = { module = "org.junit.jupiter:junit-jupiter",                             version.ref = "junit" }
junit-vintage                   = { module = "org.junit.vintage:junit-vintage-engine",                      version.ref = "junit" }
junit4                          = { module = "junit:junit",                                                 version.ref = "junit4" }
kotest                          = { module = "io.kotest:kotest-runner-junit5",                              version.ref = "kotest" }
kotest-assertions               = { module = "io.kotest:kotest-assertions-core",                            version.ref = "kotest" }
kotest-datatest                 = { module = "io.kotest:kotest-framework-datatest",                         version.ref = "kotest" }
kotest-property                 = { module = "io.kotest:kotest-property",                                   version.ref = "kotest" }
equalsverifier                  = { module = "nl.jqno.equalsverifier:equalsverifier",                       version.ref = "equalsverifier" }
